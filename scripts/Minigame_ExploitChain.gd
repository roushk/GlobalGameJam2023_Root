extends NinePatchRect


# Declare member variables here. Examples:
# var a = 2
# var b = "text"
var rng = RandomNumberGenerator.new()
var dragDropLocations = []
var blocks = []
var answers = []
var text = []
var numActive = 0;
var notSolved = true;

# Called when the node enters the scene tree for the first time.
func _ready():
	dragDropLocations.append(get_node("DragDropLocation1"));
	dragDropLocations.append(get_node("DragDropLocation2"));
	dragDropLocations.append(get_node("DragDropLocation3"));
	dragDropLocations.append(get_node("DragDropLocation4"));
	dragDropLocations.append(get_node("DragDropLocation5"));
	dragDropLocations.append(get_node("DragDropLocation6"));
	dragDropLocations.append(get_node("DragDropLocation7"));
	dragDropLocations.append(get_node("DragDropLocation8"));
	dragDropLocations.append(get_node("DragDropLocation9"));
	dragDropLocations.append(get_node("DragDropLocation10"));
	
	blocks.append(get_node("MouseDragBlock1"));
	blocks.append(get_node("MouseDragBlock2"));
	blocks.append(get_node("MouseDragBlock3"));
	blocks.append(get_node("MouseDragBlock4"));
	blocks.append(get_node("MouseDragBlock5"));
	blocks.append(get_node("MouseDragBlock6"));
	blocks.append(get_node("MouseDragBlock7"));
	blocks.append(get_node("MouseDragBlock8"));
	blocks.append(get_node("MouseDragBlock9"));
	blocks.append(get_node("MouseDragBlock10"));
	
	for drop in blocks:
		drop.set_process(false);
		drop.set_physics_process(false)
		drop.visible = false
		answers.append(-1);
		text.append("NONE");
	
	for loc in dragDropLocations:
		loc.set_process(false);
		loc.set_physics_process(false)
		loc.visible = false

	setup_level(4)
	

func setup_level(numDrops):
	numActive = numDrops
	rng.randomize()

	var num = 0
	for drop in dragDropLocations:
		if(num < numActive):
			drop.set_process(true)
			drop.visible = true;
			drop.set_physics_process(true)
			answers[num] = rng.randi_range(0, 7)	#assign random solution val
		num += 1

	num = 0
	#TODO Generate password for command
	
	var randVal = rng.randi_range(0, 7)
	
	for block in blocks:
		if(num < numActive):
			block.set_process(true)
			block.visible = true;
			block.set_physics_process(true)
			block.set_frame(answers[num])
		num += 1
		
func check_values():
	var num = 0
	for drop in dragDropLocations:	# For each drop location
		if(num < numActive):		# If active location
			for ar in drop.get_node("Area2D").get_overlapping_areas():	 # Get overlapping values
				if(ar.get_name().left(14) == "MouseDragBlock"):	# If is drag block type
					var value = ar.get_value()
					if(answers[num] != value):						# If answer is wrong
						return false										# Incorrect
			if(drop.get_node("Area2D").get_overlapping_areas().size() <= 0):
				return false	#Missing a node
		num += 1
	return true
			
# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if(check_values() == true && notSolved):
		print("Correct")
		notSolved = false
		var solutionString = "echain -a"
		for answer in answers:
			if answer != -1:
				solutionString += str(answer)
		solutionString += " --force -o resolver.ech"
		$"../Terminal/LineEdit"._set_password(solutionString)
		print(solutionString)
			
	#Display Password
	pass
